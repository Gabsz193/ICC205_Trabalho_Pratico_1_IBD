DROP TABLE IF EXISTS Customer CASCADE;
DROP TABLE IF EXISTS Review CASCADE;
DROP TABLE IF EXISTS Groups CASCADE;
DROP TABLE IF EXISTS Category CASCADE;
DROP TABLE IF EXISTS Product CASCADE;
DROP TABLE IF EXISTS Similar_Products CASCADE;
DROP TABLE IF EXISTS Product_Category CASCADE;
CREATE TABLE Customer (
    ID_CUSTOMER VARCHAR(50) PRIMARY KEY
);

CREATE TABLE Groups (
    ID_GROUP VARCHAR(50) PRIMARY KEY,
    NAME VARCHAR(50)
);

CREATE TABLE Category (
    ID_CATEGORY VARCHAR(100) PRIMARY KEY,
    NAME VARCHAR(100),
    ID_SUPER_CATEGORY VARCHAR(100),
    FOREIGN KEY (ID_SUPER_CATEGORY) REFERENCES Category(ID_CATEGORY)
);

CREATE TABLE Product (
    ID_PRODUCT VARCHAR(50) PRIMARY KEY,
    ASIN VARCHAR(50) NOT NULL UNIQUE,
    TITLE VARCHAR(500),
    ID_GROUP VARCHAR(50),
    SALESRANK INT,
    TOTAL INT,
    AVG_RATING FLOAT,
    FOREIGN KEY (ID_GROUP) REFERENCES Groups(ID_GROUP)
);

CREATE TABLE Product_Category (
    ID_PRODUCT_CATEGORY VARCHAR(50),
    ID_PRODUCT VARCHAR(50),
    ID_CATEGORY VARCHAR(100),
    PRIMARY KEY (ID_PRODUCT_CATEGORY),
    FOREIGN KEY (ID_PRODUCT) REFERENCES Product(ID_PRODUCT),
    FOREIGN KEY (ID_CATEGORY) REFERENCES Category(ID_CATEGORY)
);

CREATE TABLE Similar_Products (
    ID_PRODUCT VARCHAR(50),
    ID_SIMILAR_PRODUCT VARCHAR(50),
    RANK INT,
    PRIMARY KEY (ID_PRODUCT, ID_SIMILAR_PRODUCT),
    FOREIGN KEY (ID_PRODUCT) REFERENCES Product(ASIN),
    FOREIGN KEY (ID_SIMILAR_PRODUCT) REFERENCES Product(ASIN)
);

CREATE TABLE Review (
    ID_REVIEW VARCHAR(50) PRIMARY KEY,
    ID_PRODUCT VARCHAR(50),
    ID_CUSTOMER VARCHAR(50),
    DT_REVIEW DATE,
    RATING INT CHECK (RATING IN (1, 2, 3, 4, 5)),
    QTD_VOTES INT,
    QTD_HELPFUL_VOTES INT,
    FOREIGN KEY (ID_PRODUCT) REFERENCES Product(ID_PRODUCT),
    FOREIGN KEY (ID_CUSTOMER) REFERENCES Customer(ID_CUSTOMER)
);

DROP VIEW IF EXISTS Product_Discontinued;
CREATE VIEW Product_Discontinued AS
    SELECT
        ID_PRODUCT,
        ASIN,
        'Product Discontinued' AS SITUACAO
    FROM Product WHERE TITLE IS NULL;

DROP VIEW IF EXISTS Product_Metrics;
CREATE VIEW Product_Metrics AS
    SELECT
        t1.ID_PRODUCT,
        t1.ASIN,
        COUNT(t2.ID_REVIEW) AS DOWNLOADED,
        COUNT(t3.ID_CATEGORY) AS QTD_CATEGORIES
    FROM Product t1
    INNER JOIN Review t2 ON t1.ID_PRODUCT = t2.ID_PRODUCT
    INNER JOIN Product_Category t3 ON t1.ID_PRODUCT = t3.ID_PRODUCT
    GROUP BY t1.id_product, t1.ASIN;